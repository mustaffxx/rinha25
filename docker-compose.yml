services:
  postgres:
    image: postgres:15-alpine
    container_name: rinha-postgres
    hostname: postgres
    environment:
      - POSTGRES_DB=rinha25
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ./db_schema.sql:/docker-entrypoint-initdb.d/db_schema.sql:ro
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "120MB"

  nginx:
    image: nginx:1.25-alpine
    container_name: rinha-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      postgres:
        condition: service_healthy
      api1:
        condition: service_started
      api2:
        condition: service_started
    ports:
      - "9999:9999"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "30MB"

  api1: &api
    build: .
    container_name: rinha-api1
    hostname: api1
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres/rinha25
      - REDIS_URL=redis://redis:6379
    networks:
      - backend
      - payment-processor
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "90MB"

  api2:
    <<: *api
    container_name: rinha-api2
    hostname: api2

  redis:
    image: redis:7-alpine
    container_name: rinha-redis
    hostname: redis
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100MB"


networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
