services:
  postgres:
    image: postgres:15-alpine
    container_name: rinha-postgres
    hostname: postgres
    environment:
      - POSTGRES_DB=rinha25
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_schema.sql:/docker-entrypoint-initdb.d/db_schema.sql:ro
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "120MB"

  nginx:
    image: nginx:1.25-alpine
    container_name: rinha-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      postgres:
        condition: service_healthy
      api1:
        condition: service_started
      api2:
        condition: service_started
    ports:
      - "9999:9999"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "30MB"

  api1: &api
    build: .
    container_name: rinha-api1
    hostname: api1
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres/rinha25
      - CACHE_URL=memcache://memcached:11211
    networks:
      - backend
      - payment-processor
    depends_on:
      postgres:
        condition: service_healthy
      memcached:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "80MB"

  api2:
    <<: *api
    container_name: rinha-api2
    hostname: api2

  memcached:
    image: memcached:1.6-alpine
    container_name: rinha-memcached
    hostname: memcached
    command: ["memcached", "-m", "64", "-c", "1024", "-v"]
    networks:
      - backend
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "11211"]
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "80MB"

volumes:
  postgres_data:
    driver: local

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
